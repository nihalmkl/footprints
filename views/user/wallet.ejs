<div>
    <h4>Wallet</h4>
    <div class="wallet-card">
      <div>
        <h4>Balance: ₹<%= wallet ? wallet.balance.toFixed(2) : '0' %></h4>
      </div>
      <div class="wallet-icon">
        <i class="fas fa-wallet"></i>
      </div>
    </div>
    <button class="credit-card-button"  type="button" data-toggle="modal"
    data-target="#addFundsModal">
      <i class="fas fa-credit-card credit-card-icon"></i> Add Money
    </button>
  </div>
  
  <div class="row justify-content-center mt-5">
    <div class="col-md-8">
      <h4 class="text-center mb-4">Transaction History</h4>
      <div class="transaction-list">
        <% if (wallet && wallet.wallet_history.length > 0) { %>
          <table class="table table-bordered">
            <thead class="thead-light">
              <tr>
                <th>Date</th>
                <th>Transaction Type</th>
                <th>Amount</th>
              </tr>
            </thead>
            <tbody>
              <% wallet.wallet_history.forEach(transaction => { %>
                <tr>
                  <td><%= new Date(transaction.date).toLocaleDateString() %></td>
                  <td>
                    <% if (transaction.transaction_type === 'credited') { %>
                      <span class="text-success">
                        <i class="bi bi-arrow-down-circle-fill icon"></i> <%= transaction.transaction_type %>
                      </span>
                    <% } else { %>
                      <span class="text-danger">
                        <i class="bi bi-arrow-up-circle-fill icon"></i> <%= transaction.transaction_type %>
                      </span>
                    <% } %>
                  </td>
                  <td class="<%= transaction.transaction_type === 'credited' ? 'text-success' : 'text-danger' %>">
                    <%= transaction.transaction_type === 'credited' ? '+' : '-' %>₹<%= transaction.amount.toFixed(2) %>
                  </td>
                </tr>
              <% }) %>
            </tbody>
          </table>
        <% } else { %>
          <div class="text-center text-muted">
            <p>No transactions found.</p>
          </div>
        <% } %>
      </div>
    </div>
  </div>
  
  <div class="modal fade" id="addFundsModal" tabindex="-1" aria-labelledby="addFundsModalLabel" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="addFundsModalLabel">Add Funds to Wallet</h5>

        </div>
        <div class="modal-body">
          <form id="addFundsForm">
            <div class="mb-3">
              <label for="amount" class="form-label">Amount (₹)</label>
              <input type="number" class="form-control" id="amount" required placeholder="Enter amount">
            </div>
          </form>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
          <button type="button" class="btn btn-primary" id="confirmAddFundsBtn" onclick="AddFund()">Add Funds</button>
        </div>
      </div>
    </div>
  </div>
  <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
  <script>
 async function AddFund() {
  const Toast = Swal.mixin({
      toast: true,
      position: "top-end",
      showConfirmButton: false,
      timer: 3000,
      timerProgressBar: true,
      didOpen: (toast) => {
        toast.onmouseenter = Swal.stopTimer;
        toast.onmouseleave = Swal.resumeTimer;
      }
    });
  const amount = document.getElementById("amount").value

  if (!amount || amount <= 0) {
    Toast.fire({
        icon: "error",
        title: "Enter Valied Amount",
        text: 'Enter Valied amount '
      });
    return
  }

  try {
    const response = await fetch("/addFund", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({ amount }),
    })
    
    const data = await response.json()

    let totalamout = (data.order.amount)/100
    if (data.success) {
      
      const options = {
        key: "rzp_test_MoQOrZAlepfiB7", 
        amount: data.order.amount,
        currency: "INR",
        name: "FootPrints",
        description: "Add funds to wallet",
        order_id: data.order.id,
        handler: async function (response) {
          response.amount = totalamout
          console.log(response)
          try {
            const res = await fetch("/addFund/success", {
              method: "POST",
              headers: { "Content-Type": "application/json" },
              body: JSON.stringify(response,totalamout),
            })
            if (res.ok) {
              Swal.fire({
                icon: "success",
                title: "Added Successfully",
                text: "Your funds have been added.",
                confirmButtonText: "OK",
              }).then(() => {
                location.reload() 
              })
            } else {
              Swal.fire({
                icon: "error",
                title: "Failed to Add Funds",
                text: "Please try again.",
                confirmButtonText: "OK",
              }).then(()=>{
                location.reload()
              })
            }
          } catch (err) {
            console.error("Error processing payment success:", err)
            Swal.fire({
            icon: "error",
            title: "Error",
            text: "An error occurred during payment processing.",
            confirmButtonText: "OK",
           })
          }
        },
        prefill: {
          email: "user@example.com",
        },
      }

      const rzp1 = new Razorpay(options)
      rzp1.open()
    } else {
      alert(data.message)
    }
  } catch (error) {
    console.error("Error in AddFund:", error)
    alert("Something went wrong.")
  }
}


  </script>