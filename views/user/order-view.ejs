<%- include('../partials/header') %>
<style>
body {
    background-color: #f8f9fa;
}

.card {
    border: 1px solid #dee2e6;
    border-radius: 0.5rem;
}

.card-title {
    font-weight: bold;
}

.text-align-right {
    text-align: right;
}
</style>
</head>
<body>

    <div class="container my-5">
        <h1 class="mb-4">Order Details</h1>
        <div class="card">
            <div class="card-body">
                <h5 class="card-title">Order ID: <%= order.order_id %></h5>
                
                <p class="card-text"><strong>Address:</strong></p>
                <ul>
                    <li><strong>Full Name:</strong> <%= address.full_name %></li>
                    <li><strong>Street Address:</strong> <%= address.street_address %></li>
                    <li><strong>City:</strong> <%= address.city %></li>
                    <li><strong>State:</strong> <%= address.state %></li>
                    <li><strong>Postal Code:</strong> <%= address.pincode %></li>
                    <li><strong>Country:</strong> <%= address.country %></li>
                    <li><strong>Phone:</strong> <%= address.phone %></li>
                </ul>
    
                <h6 class="card-title ">Order Status: <%= order.order_status %></h6>
                <% if (order.order_status === 'Pending') { %>
                    <p><strong>Expected Delivery Date:</strong> <%= order.placed_at ? order.placed_at.toDateString() : 'TBD' %></p>
                <% } %>
                <h6 class="card-title ">Payment Status: <%= order.payment_status %></h6>
                <% if ((order.payment_status === 'Pending' || order.payment_status === 'Failed') && order.order_status !== 'Cancelled') { %>
                    <button class="btn p-t-10 re-pay"
                    onclick="rePayment('<%= order._id %>')"><i class="fas fa-credit-card"></i> Pay online</button>
                <% }%>
                <% if (order.order_status === 'Delivered' || order.order_status === 'Returned') { %>
                    <button class="btn p-t-10 invoice-download"
                            onclick="downloadInvoice('<%= order._id %>', '<%= order.order_id %>')">
                        <i class="fas fa-file-invoice"></i> Download Invoice
                    </button>
                <% } %>
    
                <h4 class="mt-4">Items</h4>
                <ul class="list-group">
                    <% order.items.forEach(function(item) { %>
                        <li class="list-group-item d-flex justify-content-between align-items-center">
                            <div class="d-flex align-items-center">
                                <img src="<%= item.product_id.images[0] %>" class="img-fluid" alt="Product Image" style="width: 50px; height: 50px; margin-right: 10px;">
                                <div>
                                    <strong>Product Name:</strong> <%= item.product_id.product_name %><br>
                                    <strong>Quantity:</strong> <%= item.quantity %><br>
                                    <strong>Price:</strong> â‚¹<%= item.price.toFixed(2) %>
                                </div>
                            </div>
                            <% if (!item.is_cancelled && order.order_status !== 'Delivered' && order.order_status !== "Returned") { %>
                                <button type="button" class="btn btn-danger btn-sm cancel-button" data-item-id="<%= item._id %>">
                                    Cancel
                                </button>
                            <% } else if (item.is_cancelled) { %>
                                <button type="button" class="btn btn-secondary btn-sm" disabled>
                                    Cancelled
                                </button>
                            <% } %>
                            <% if (!item.is_returned && order.order_status === 'Delivered') { %>
                                <button type="button" class="btn btn-warning btn-sm return-button" data-item-id="<%= item._id %>">
                                 Return
                                </button>
                            <% }else if (item.is_returned) { %>
                                <button type="button" class="btn btn-secondary btn-sm" disabled>
                                    Returned
                                </button>
                            <% } %>
                        </li>
                    <% }); %>
                </ul>

    
                <a href="/profile/<%= user._id %>" class="btn mt-3" style="width: 6rem; background-color: #88c8bc;">Back</a>
            </div>
        </div>
    </div>
    <script>
        
        document.querySelectorAll('.return-button').forEach(button => {
            button.addEventListener('click', async (e) => {
                const itemId = e.target.getAttribute('data-item-id')
                const orderId = "<%= order._id %>"
    
                try {
                    const response = await fetch(`/orders/${orderId}/${itemId}/request-return`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    })
    
                    const result = await response.json()
    
                    if (response.ok) {
                        Swal.fire({
                            title: "Success",
                            text: result.message,
                            icon: "success",
                            timer: 1500,
                            showConfirmButton: false
                        }).then(() => {
                            window.location.reload()
                        })
                    } else {
                        Swal.fire({
                            title: "Failed",
                            text: result.message || "Failed to submit return request",
                            icon: "error",
                            timer: 1500
                        })
                    }
                } catch (error) {
                    console.error("Error:", error)
                    Swal.fire({
                        title: "Error!",
                        text: "Please try again later",
                        icon: "error",
                        timer: 1500,
                        showConfirmButton: false
                    })
                }
            })
        })

        document.querySelectorAll('.cancel-button').forEach(button => {
            button.addEventListener('click', async (e) => {
                const itemId = e.target.getAttribute('data-item-id')
                const orderId = "<%= order._id %>"
                
    
                try {
                    const response = await fetch(`/orders/${orderId}/${itemId}/cancel-order`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    })
    
                    const result = await response.json()
    
                    if (response.ok) {
                        Swal.fire({
                            title: "Success",
                            text: result.message,
                            icon: "success",
                            timer: 1500,
                            showConfirmButton: false
                        }).then(() => {
                            window.location.reload()
                        })
                    } else {
                        Swal.fire({
                            title: "Failed",
                            text: result.message || "Failed to submit ",
                            icon: "error",
                            timer: 1500
                        })
                    }
                } catch (error) {
                    console.error("Error:", error)
                    Swal.fire({
                        title: "Error!",
                        text: "Please try again later",
                        icon: "error",
                        timer: 1500,
                        showConfirmButton: false
                    })
                }
            })
        })
        function downloadInvoice() {
        const orderId = "<%= order._id %>"
        const order_id = "<%=order.order_id%>"
        console.log(order_id)
        fetch(`/order/${orderId}/invoice`, {
            method: 'GET',
            headers: {
                'Content-Type': 'application/json',
            },
        })
        .then(response => {
        if (!response.ok) {
            throw new Error('Failed to download invoice');
        }
        return response.blob();
    })
    .then(blob => {
        // Create a link element to trigger the file download
        const link = document.createElement('a');
        const url = URL.createObjectURL(blob);
        link.href = url;
        link.download = `invoice_${order_id}.pdf`; // Suggested filename
        link.click();
        URL.revokeObjectURL(url); // Clean up the URL object after use
    })
    .catch(error => {
        console.error('Error downloading the invoice:', error);
        alert('There was an error downloading the invoice. Please try again.');
    });
    }


    async function rePayment(orderId) {
  try {

    const response = await fetch('/complete-payment', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({ orderId }),
    })

    const data = await response.json()
    
    if (!response.ok || !data.orderId) {
      return alert(data.error || 'Failed to retrieve Razorpay order ID')
    }

    const options = {
      key: 'rzp_test_MoQOrZAlepfiB7', // Replace with your Razorpay Key
      amount: data.amount * 100, 
      currency: 'INR',
      name: 'FootPrints',
      description: 'Order Payment',
      order_id: data.orderId, // Razorpay Order ID
      handler: async function (response) {
        const verifyResponse = await fetch('/verify-payment/complete', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({
            razorpay_order_id: response.razorpay_order_id,
            razorpay_payment_id: response.razorpay_payment_id,
            razorpay_signature: response.razorpay_signature,
          }),
        })

        if (verifyResponse.ok) {
          Swal.fire({
            icon: 'success',
            title: 'Payment Successful',
            text: 'Your payment has been completed successfully.',
            confirmButtonText: 'OK',
          }).then(() => {
            window.location.href = '/profile/<%= user._id %>'
          })
        } else {
          alert('Payment verification failed')
        }
      },
      prefill: {
        name: 'User Name',
        email: 'user@example.com',
        contact: '1234567890',
      },
      theme: {
        color: '#3399cc',
      },
    }

    const rzp = new Razorpay(options)
    rzp.open()
  } catch (error) {
    console.error(error)
    alert('Something went wrong')
  }
}
    </script>
<script src="https://checkout.razorpay.com/v1/checkout.js"></script>

<%- include('../partials/footer') %>
