<style>
.pagination {
    display: flex;
    justify-content: center;
    margin-top: 20px;
}

.pagination a {
    color: #88c8bc;
    text-decoration: none;
    margin: 0 5px;
    padding: 8px 12px;
    border: 1px solid #ddd;
    border-radius: 4px;
    transition: background-color 0.3s, color 0.3s;
}

.pagination a.active {
    background-color: #88c8bc;
    color: #fff;
}

.pagination a:hover {
    background-color: #ddd;
}
</style>

<div class="container">
    <div class="d-flex justify-content-end mb-4">
        <button class="btn btn-custom" data-bs-toggle="modal" data-bs-target="#addCategoryModal">+ Add</button>
    </div>

    <div class="table-container">
        <table class="table table-hover table-borderless table-responsive">
            <thead class="table-dark">
                <tr>
                    <th>Category ID</th>
                    <th>Name</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                <% categories.forEach(function(category, index) { %>
                <tr>
                    <td>#<%= index+1 %></td>
                    <td><%= category.category_name %></td>
                    <td>
                        <button class="action-btn" data-bs-toggle="modal" data-bs-target="#editCategoryModal-<%= index %>">
                            <i class="fas fa-edit text-warning"></i>
                        </button>
                        <button class="action-btn" onclick="deleteCategory('<%= category._id %>')">
                            <% if (category.is_delete) { %>
                                <i class="fas fa-undo-alt text-success"></i>
                            <% } else { %>
                            <i class="fas fa-trash-alt text-danger"></i>
                            <% } %>
                        </button>
                    </td>
                </tr>
                <% }) %>
            </tbody>
        </table>
    </div>
</div>
<div class="pagination mt-4">
    <% for (let i = 1; i <= totalPages; i++) { %>
      <a href="/admin/categories?page=<%= i %>" class="pagination-link <%= i === currentPage ? 'active' : '' %>">
        <%= i %>
      </a>
    <% } %>
  </div>
<div class="modal fade" id="addCategoryModal" tabindex="-1" aria-labelledby="addCategoryModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addCategoryModalLabel">Add New Category</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="addCategoryForm" onsubmit="handleAddCategory(event)">
                    <div class="mb-3">
                        <label for="categoryName" class="form-label">Category Name</label>
                        <input type="text" class="form-control" id="categoryName-formEdit" placeholder="Enter category name" name="categoryName">
                        <div id="name-error" class="text-danger"></div> <!-- Error message container -->
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-primary">Add Category</button> <!-- Submit button -->
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<% categories.forEach(function(category, index) { %>
    <div class="modal fade" id="editCategoryModal-<%= index %>" tabindex="-1" aria-labelledby="editCategoryModalLabel-<%= index %>" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="editCategoryModalLabel-<%= index %>">Edit Category</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form action="#" method="POST" onsubmit="handleEditCategory(event, '<%= category._id %>')"> <!-- Prevent default form submission here -->
                        <div class="mb-3">
                            <label for="editCategoryName-<%= index %>" class="form-label">Category Name</label>
                            <input type="text" class="form-control"  id="editCategoryName-Form-edit" value="<%= category.category_name %>" >
                            <small id="categoryError" style="color: red;"></small>
                        </div>
                        <input type="text" name="categoryId" id="fadf" hidden>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                            <button  type="submit" class="btn btn-primary">Save changes</button> 
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
    <% }) %>
    
    
    


<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
<script>
    function handleAddCategory(event) {
    event.preventDefault(); 
    console.log("ihasdfashdf")
    
    const categoryName = document.getElementById('categoryName-formEdit').value.trim(); 
    console.log(categoryName)
    let isValid = true;

    if (categoryName === '') {
        displayErrorMessage('name-error', "Please enter a name");
        isValid = false;
    } else if (!/^[a-zA-Z\s]+$/.test(categoryName)) {
        displayErrorMessage('name-error', "Category name should contain only alphabets");
        isValid = false;
    }
    if(!isValid){
        return 
    }
    fetch('/admin/add-category', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({ categoryName })
    })
    .then(response => {
        if (!response.ok) {
            return response.json().then(err => {
                throw new Error(err.error);
            });
        }
        return response.json();
    })
    .then(data => {
        location.reload(); 
    })
    .catch(err => {
        Swal.fire({
            icon: "error",
            title: "Oops",
            text: err.message === 'Category already exists' ? "Category already exists" : "Something went wrong",
            timer: 1500
        });
    });
}

async function handleEditCategory(event, categoryId) {
    event.preventDefault();

    const categoryName = document.getElementById(`editCategoryName-Form-edit`).value.trim();
    console.log(categoryId);
    const categoryError =  document.getElementById('categoryError');
    categoryError.innerHTML=""



   const response = await fetch(`/admin/edit-category/${categoryId}`, {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({ categoryName: categoryName })
    });
    const data = await response.json()
    if(data.success){
        Swal.fire({
            icon: "success",
            title: "Oops",
            text: data.message,
            timer: 1500
        });
        setTimeout(() => {
            window.location.reload()
        }, 1500);
    }else if(data.exist){
        Swal.fire({
            icon: "error",
            title: "error",
            text: data.message,
            timer: 1500
        });
        setTimeout(() => {
            window.location.reload()
        }, 1500);
    }
    else{
        Swal.fire({
            icon: "error",
            title: "Oops",
            text: "Something went wrong",
            timer: 1500
        });
    }
}

  
function displayErrorMessage(elementId, message) {
    const errorElement = document.getElementById(elementId);
    errorElement.textContent = message;
    errorElement.style.display = 'block';
}

function clearErrorMessages() {
    document.getElementById('name-error').innerText = '';
    document.getElementById('name-error').style.display = 'none';
}

async function deleteCategory(categoryId){ 
  const response = await fetch("/admin/delete-category", {
        method: 'POST',
        headers:{
            'Content-Type': 'application/json' 
        },
        body: JSON.stringify({categoryId:categoryId})   
    })
    const data = await response.json();
        console.log("sjotoskasdfjals",data)
    if(data.deleted){
        Swal.fire({
            icon: "success",
            title: "success",
            text: data.message,
            timer: 1500
        });
        setTimeout(() => {
            window.location.reload()
        }, 1500);
    }else if(data.restored){
        Swal.fire({
            icon: "success",
            title: "success",
            text: data.message,
            timer: 1500
        });
        setTimeout(() => {
            window.location.reload()
        }, 1500);
    }
    else{
        Swal.fire({
            icon: "Error",
            title: "Somthing went wrong",
            text: data.message,
            timer: 1500
        });
    }
}
</script>