
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
      .container-fluid {
        background-color: #f8f9fa;
        min-height: 100vh;
        padding-top: 40px;
      }

      .container {
        max-width: 1200px;
      }

      /* Dropdown and Buttons */
      #sortSelect {
        min-width: 160px;
        font-size: 0.9rem;
      }

      #downloadBtn {
        font-size: 0.9rem;
        padding: 6px 12px;
      }

      /* Dashboard Card Styling */
      .card {
        background: #ffffff;
        border: 1px solid #e3e3e3;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        border-radius: 8px;
        transition: transform 0.3s ease;
      }

      .card:hover {
        transform: translateY(-5px);
      }

      .card-body {
        padding: 20px;
      }

      h5.card-title {
        font-size: 1.1rem;
        color: #6c757d;
      }

      .card-text {
        font-size: 1.4rem;
        font-weight: 600;
        color: #343a40;
      }

      /* Sort and Export Buttons */
      .sort-download-container {
        display: flex;
        justify-content: flex-end;
        align-items: center;
        gap: 10px;
      }

      .export-buttons {
        display: flex;
        align-items: center;
        gap: 10px;
        margin-left: 20px;
      }

      .export-buttons button {
        font-size: 0.9rem;
        padding: 6px 12px;
        margin-left: 8px;
      }

      /* Table Styling */
      .table-responsive {
        margin-top: 20px;
      }

      .table th {
        background-color: #f1f1f1;
        color: #343a40;
        font-weight: 600;
      }

      .table td {
        background-color: #ffffff;
        color: #495057;
        font-size: 0.9rem;
      }

      /* Responsive Adjustments */
      @media (max-width: 768px) {
        .sort-download-container {
          flex-direction: column;
          align-items: flex-start;
        }

        #sortSelect,
        .export-buttons button {
          width: 100%;
          margin-top: 8px;
        }

        .card {
          margin-bottom: 20px;
        }
      }
      canvas {
    max-width: 100%;
    height: auto;
}

    </style>
  </head>
  <body>
    <div class="container-fluid">
      <div class="container mt-5">
        <!-- Overview Section -->
        <div class="row mb-4">
          <div class="col-md-12">
            <div class="d-flex justify-content-between align-items-center">
              <div>
                <label for="sortSelect" class="me-2">Sort by:</label>
                <select id="sortSelect" class="form-select w-auto" onchange="applyFilter()">
                  <option value="">Select</option>
                  <option value="day">Last 1 Day</option>
                  <option value="week">Last 1 Week</option>
                  <option value="month">Last 1 Month</option>
                  <option value="custom">Custom Date</option>
                </select>
              </div>
              <div class="d-flex">
                <button class="btn btn-outline-danger me-2" onclick="exportPDF()">Download PDF</button>
                <button class="btn btn-outline-success" onclick="exportExcel()">Download PDF</button>
              </div>
            </div>
          </div>
        </div>
      
        <!-- Stats Cards Section -->
        <div class="row mb-4">
          <div class="col-md-3">
            <div class="card text-center">
              <div class="card-body">
                <h5 class="card-title">Total Orders</h5>
                <p class="card-text"><%= totalOrders %></p>
              </div>
            </div>
          </div>
          <div class="col-md-3">
            <div class="card text-center">
              <div class="card-body">
                <h5 class="card-title">Total Sales</h5>
                <p class="card-text">₹<%= salesAmount.toFixed(2) %></p>
              </div>
            </div>
          </div>
          <div class="col-md-3">
            <div class="card text-center">
              <div class="card-body">
                <h5 class="card-title">Total Products</h5>
                <p class="card-text"><%= totalProducts %></p>
              </div>
            </div>
          </div>
          <div class="col-md-3">
            <div class="card text-center">
              <div class="card-body">
                <h5 class="card-title">Users</h5>
                <p class="card-text"><%= totalUsers %></p>
              </div>
            </div>
          </div>
        </div>
        <!-- Sales Overview Chart Section -->
         <div class="row">
            <div class="col-lg-8 d-flex align-items-stretch">
              <div class="card w-100">
                <div class="card-body">
                  <div class="d-sm-flex d-block align-items-center justify-content-between mb-9">
                    <div class="mb-3 mb-sm-0">
                      <h5 class="card-title fw-semibold">Sales Overview</h5>
                    </div>
                    <div>
                      <select class="form-select" id="chatSortSelect" onchange="updateChartData()">
                        <option value="" selected disabled>Sort by:</option>
                        <option value="week">Week</option>
                        <option value="month">Month</option>
                        <option value="year">Year</option>
                    </select>
                    </div>
                  </div>
        
                 <!-- Hidden input to hold the chart data from EJS-->
                 <input type="hidden" id="chartData" value="<%= JSON.stringify(chartData || { labels: [], values: [] }) %>">
        
                  <canvas id="myChart" width="400" height="200"></canvas>
                </div>
              </div>
            </div>
          </div>
        </div>
      <!-- Orders Table -->
      <div class="container mt-4">
        <h5>Order List</h5>
        <div class="table-responsive">
          <table class="table table-striped table-bordered">
            <thead>
              <tr>
                <th>Order ID</th>
                <th>Date & Time</th>
                <th>Total Amount</th>
              </tr>
            </thead>
            <tbody>
              <% orders.forEach(order => { %>
              <tr>
                <td><%= order.order_id %></td>
                <td><%= order.createdAt.toLocaleString() %></td>
                <td>₹<%= order.total_amount %></td>
              </tr>
              <% }) %>
            </tbody>
          </table>
        </div>
      </div>
      <div class="container mt-5">
        <div class="row g-4">
    
          <!-- Best Selling Products -->
          <div class="col-lg-4">
            <div class="card h-100">
              <div class="card-body">
                <h5 class="card-title fw-semibold mb-4">Best Selling Products</h5>
                <div class="table-responsive">
                  <table class="table table-bordered">
                    <thead>
                      <tr>
                        <th>Product Name</th>
                        <th>Sale Count</th>
                      </tr>
                    </thead>
                    <tbody>
                      <% if (best_products && best_products.length > 0) { %>
                        <% best_products.forEach(product => { %>
                          <tr>
                            <td><%= product.product_name %></td>
                            <td><%= product.total_quantity %></td>
                          </tr>
                        <% }) %>
                      <% } else { %>
                        <tr>
                          <td colspan="2">No data available</td>
                        </tr>
                      <% } %>
                    </tbody>
                  </table>
                </div>
              </div>
            </div>
          </div>
    
          <!-- Best Selling Categories -->
          <div class="col-lg-4">
            <div class="card h-100">
              <div class="card-body">
                <h5 class="card-title fw-semibold mb-4">Best Selling Categories</h5>
                <div class="table-responsive">
                  <table class="table table-bordered">
                    <thead>
                      <tr>
                        <th>Category Name</th>
                        <th>Sale Count</th>
                      </tr>
                    </thead>
                    <tbody>
                      <% if (best_categories && best_categories.length > 0) { %>
                        <% best_categories.forEach(category => { %>
                          <tr>
                            <td><%= category.category_name %></td>
                            <td><%= category.total_quantity %></td>
                          </tr>
                        <% }) %>
                      <% } else { %>
                        <tr>
                          <td colspan="2">No data available</td>
                        </tr>
                      <% } %>
                    </tbody>
                  </table>
                </div>
              </div>
            </div>
          </div>
    
          <!-- Best Selling Brands -->
          <div class="col-lg-4">
            <div class="card h-100">
              <div class="card-body">
                <h5 class="card-title fw-semibold mb-4">Best Selling Brands</h5>
                <div class="table-responsive">
                  <table class="table table-bordered">
                    <thead>
                      <tr>
                        <th>Brand Name</th>
                        <th>Sale Count</th>
                      </tr>
                    </thead>
                    <tbody>
                      <% if (best_brands && best_brands.length > 0) { %>
                        <% best_brands.forEach(brand => { %>
                          <tr>
                            <td><%= brand.brand_name %></td>
                            <td><%= brand.total_quantity %></td>
                          </tr>
                        <% }) %>
                      <% } else { %>
                        <tr>
                          <td colspan="2">No data available</td>
                        </tr>
                      <% } %>
                    </tbody>
                  </table>
                </div>
              </div>
            </div>
          </div>
    
        </div>
      </div>


    </div>
    
    <div class="modal fade" id="dateSelectionModal" tabindex="-1" aria-labelledby="dateSelectionModalLabel" aria-hidden="true">
      <div class="modal-dialog">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title" id="dateSelectionModalLabel">Select Date Range</h5>
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
          </div>
          <div class="modal-body">
            <form id="dateFilterForm">
              <div class="mb-3">
                <label for="startDate" class="form-label">Start Date</label>
                <input type="date" class="form-control" id="startDate" required>
              </div>
              <div class="mb-3">
                <label for="endDate" class="form-label">End Date</label>
                <input type="date" class="form-control" id="endDate" required>
              </div>
              <div class="text-end">
                <button type="button" class="btn btn-secondary me-2" data-bs-dismiss="modal">Cancel</button>
                <button type="submit" class="btn btn-primary">Apply Filter</button>
              </div>
            </form>
          </div>
        </div>
      </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    
      <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
      let dateSelectionModal;
      
      document.addEventListener('DOMContentLoaded', function() {
        dateSelectionModal = new bootstrap.Modal(document.getElementById('dateSelectionModal'));
      });

      function applyFilter() {
        const filterValue = document.getElementById('sortSelect').value;
        
        if (filterValue === 'custom') {
          dateSelectionModal.show();
          return;
        }
        
        window.location.href = `/admin/dashboard?filter=${filterValue}`;
      }

      document.getElementById('dateFilterForm').addEventListener('submit', function(e) {
        e.preventDefault();
        
        const startDate = document.getElementById('startDate').value;
        const endDate = document.getElementById('endDate').value;
       
        if (startDate && endDate) {
          if (new Date(startDate) > new Date(endDate)) {
            alert('Start date cannot be later than end date');
            return;
          }

          window.location.href = `/admin/dashboard?startDate=${startDate}&endDate=${endDate}`;
        } else {
          alert('Please select both start and end dates');
        }
      });



function exportExcel() {

  const params = new URLSearchParams(window.location.search);

const filter = params.get('filter'); 
const startDate = params.get('startDate'); 
const endDate = params.get('endDate');  

let url = '/admin/export-sales-report/excel';

if (startDate && endDate) {
    url += `?startDate=${startDate}&endDate=${endDate}`;
} else if (filter) {
    url += `?filter=${filter}`;
}
  window.location.href = url;
}

function exportPDF() {
    const params = new URLSearchParams(window.location.search);

const filter = params.get('filter'); 
const startDate = params.get('startDate'); 
const endDate = params.get('endDate');  

let url = '/admin/export-sales-report/pdf';

if (startDate && endDate) {
    url += `?startDate=${startDate}&endDate=${endDate}`;
} else if (filter) {
    url += `?filter=${filter}`;
}


window.location.href = url; 

}

let chartInstance;
const chartDataElement = document.getElementById('chartData');
const chartData = JSON.parse(chartDataElement.value || '{}'); // EJS passes the data here

if (chartData && chartData.labels && chartData.values) {
    const ctx = document.getElementById('myChart').getContext('2d');
    chartInstance = new Chart(ctx, {
        type: 'bar',
        data: {
            labels: chartData.labels,
            datasets: [{
                label: 'Sales Data',
                data: chartData.values,
                borderColor: 'rgba(75, 192, 192, 1)',
                borderWidth: 1,
                fill: false
            }]
        },
        options: {
            responsive: true,
            scales: {
                y: {
                    beginAtZero: true
                }
            }
        }
    });
} else {
    console.error('Invalid chart data provided:', chartData);
}

// Function to update chart based on selected filter
function updateChartData() {
    const filterValue = document.getElementById('chatSortSelect').value;
    fetch(`/admin/dashboard?filter=${filterValue}`)
        .then(response => response.json())
        .then(data => {
          console.log('dhdhdhdhdhhdhdhdhdhdhhhhhhhhhhh')
            // Check if the returned data contains the correct structure
            if (data && data.labels && data.values) {
                // Update chart data
                chartInstance.data.labels = data.labels;
                chartInstance.data.datasets[0].data = data.values;
                chartInstance.update();
            } else {
                console.error('Invalid data structure returned from the server');
            }
        })
        .catch(error => console.error('Error fetching chart data:', error));
}

</script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js" 
        integrity="sha384-vfXChjKjWL3GCVtU0mOVXWhbkFr+u4AbzOTLcmuM7WUtkDniVsl1aauqbMNZB0lY" 
        crossorigin="anonymous"></script>
  </body>
</html>
